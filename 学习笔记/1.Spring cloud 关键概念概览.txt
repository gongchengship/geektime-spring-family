微服务本身是一套架构设想
spring cloud 和 Dubbo 等实现了 微服务设想。他们的侧重点不同Dubbo更侧重于微服务治理

1.zuul（网关）：其自身也是一个微服务，当用户（如浏览器）发来请求时，zuul负责调度各个微服务协同工作，zuul根据微服务名称来调度各个微服务，它可能持微服务地址与微服务名称的映射
2.Eureka（注册中心）:其自身也是一个微服务，每启动一个微服务时，微服务会到注册中心注册自己的信息，并且复制一份包括自己在内的所有微服务的注册信息到自己本地。
	这样以来，各个微服务就不用通过注册中心来调用其他微服务，而是直接调用其他微服务。
3.Ribbon （客户端负载均衡）：他是一个组件，配合注册中心，负责客户端负载均衡，它让主调方服务在己方完成负载均衡，而不是被调方（客户端）完成负载均衡
4.SpringCloud Config（配置中心）：其功能之一是可以动态修改修改配置
5.Netflix（断路器）：Netflix 将该组件取名为 Hystrix，宣言为 “defend your app”，寓意应该是：当系统受到伤害时，能够像豪猪的棘刺一样保护系统。

Spring Cloud Hystrix 基于 Netflix Hystrix 实现，具备服务降级、服务熔断、线程与信号隔离、请求缓存、请求合并以及服务监控等强大功能。

6.链
